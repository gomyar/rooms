#!/usr/bin/env python

import os

from gevent import monkey
monkey.patch_socket()

from optparse import OptionParser

from rooms.node import Node

import logging
import logging.config
log = logging.getLogger("rooms.node")


if __name__ == "__main__":
    node = None
    try:
        log.info("Starting server")
        parser = OptionParser()

        parser.add_option("-c", "--controller", dest="controller_address",
            help="Address of controller node", default="localhost:8082")

        parser.add_option("-i", "--controller-api", dest="controller_api",
            help="Address of controller xmlrpc api (client and controller)",
            default="localhost:8081")

        parser.add_option("-a", "--address", dest="address",
            default="localhost:8080", help="Address to serve node on")

        parser.add_option("-d", "--dbaddr", dest="dbaddr",
            default="localhost:27017", help="Address of mongo server")

        parser.add_option("-g", "--game", dest="game",
            default="/home/ray/projects/rooms/games/demo1",
                help="Path to game dir")

        (options, args) = parser.parse_args()
        if os.path.exists("logging.conf"):
            logging.config.fileConfig("logging.conf")

        host, port = options.address.split(":")
        dbhost, dbport = options.dbaddr.split(":")

        node = Node(options.game, host, int(port))
        node.load_game(dbhost, int(dbport))
        node.init_controller(options)

        log.info("Starting Rooms")
        node.start()
    except:
        log.exception("Exception starting server")
    finally:
        log.info("Server stopped")
        if node:
            node.shutdown()
